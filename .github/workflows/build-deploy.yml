name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
        env:
            DATABASE_HOSTNAME: localhost
            DATABASE_PORT: 5432
            DATABASE_PASSWORD: "GA05niyu#"
            DATABASE_NAME :  Fastapi
            DATABASE_USERNAME: postgres
            SECRET_KEY: 917f15a68fca533d77fc6bf6d32e5022533eaa0c1f5147b267866b9a46a53c1c
            ALGORITHM: HS256
            ACCESS_TOKEN_EXPIRE_MINUTES: 30
        services:
                postgres:
                    image: postgres
                    env:
                        POSTGRES_PASSWORD: "GA05niyu#"
                        POSTGRES_DB: Fastapi_test
                    ports:
                      - 5432:5432  
                    options: >-
                        --health-cmd pg_isready
                        --health-interval 10s
                        --health-timeout 5s
                        --health-retries 5 


        runs-on: ubuntu-latest
        steps:
            - name: pulling git repo
              uses: actions/checkout@v2
            - name: install python version 3.9
              uses: actions/setup-python@v2
              with: 
                    python-version: "3.13.7"
            - name: update pip
              run: python -m pip install --upgrade pip
            - name: installing all dependencies
              run: pip install -r requirements.txt
            - name: test with pytest
              run: |
                    pip install pytest
                    pytest
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
            - name: Build and push
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                context: ./
                file: ./Dockerfile
                builder: ${{ steps.buildx.outputs.name }}
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ffastapi:latest
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache
            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}

